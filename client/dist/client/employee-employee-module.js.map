{"version":3,"sources":["webpack:///./src/app/admin/employee/employee-routing.module.ts","webpack:///./src/app/admin/employee/employee.component.html","webpack:///./src/app/admin/employee/employee.component.ts","webpack:///./src/app/admin/employee/employee.module.ts","webpack:///./src/app/admin/employee/services/employee.service.ts","webpack:///./src/app/admin/employee/store/actions/index.ts","webpack:///./src/app/admin/employee/store/effects/index.ts","webpack:///./src/app/admin/employee/store/reducers/index.ts","webpack:///./src/app/admin/employee/store/selectors/index.ts"],"names":[],"mappings":"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","file":"employee-employee-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EmployeeComponent } from './employee.component';\n\nconst routes: Routes = [\n  { path: '', component: EmployeeComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeRoutingModule { }\n","module.exports = \"<div class=\\\"content container-fluid\\\" style=\\\"padding: 30px;\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-4\\\">\\n            <h4 class=\\\"page-title\\\">Employee</h4>\\n        </div>\\n        <div class=\\\"col-xs-8 text-right m-b-20\\\">\\n            <a href=\\\"#\\\" class=\\\"btn btn-primary rounded pull-right\\\" data-toggle=\\\"modal\\\" data-target=\\\"#add_employee\\\" (click)=\\\"select()\\\"><i class=\\\"fa fa-plus\\\"></i> Add Employee</a>\\n        </div>\\n    </div>\\n    <div class=\\\"row filter-row\\\">\\n        <div class=\\\"col-sm-3 col-xs-6\\\">\\n            <div class=\\\"form-group form-focus\\\">\\n                <label class=\\\"control-label\\\">Employee Name</label>\\n                <input type=\\\"text\\\"  #namesearch class=\\\"form-control floating\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-3 col-xs-6\\\">\\n\\n        </div>\\n        <div class=\\\"col-sm-3 col-xs-6\\\">\\n\\n        </div>\\n        <div class=\\\"col-sm-3 col-xs-6\\\">\\n            <a (click)=\\\"getEmployee()\\\" class=\\\"btn btn-success btn-block\\\"> Search </a>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-striped custom-table datatable\\\" style=\\\"margin-bottom: 100px\\\">\\n                    <thead>\\n                    <tr>\\n                        <th style=\\\"width:30%;\\\">Name</th>\\n                        <th>Position</th>\\n                        <th>Status</th>\\n                        <th>Skills</th>\\n                        <th class=\\\"text-right\\\">Action</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody *ngIf=\\\"allEmployee$ | async as allEmployee\\\">\\n                    <tr *ngFor=\\\"let item of allEmployee\\\">\\n                        <td>\\n                            <a href=\\\"./profile.html\\\" class=\\\"avatar\\\">\\n                                <img *ngIf=\\\"item.image\\\" [src]=\\\"'http://localhost:3000/'+item.image\\\" alt=\\\"\\\" style=\\\"width: 100%; display: block;\\\">\\n                            </a>\\n                            <h2><a>{{ item.name }} {{ item.surname }} <span *ngIf=\\\"item.department\\\">{{item.department.name}}</span></a></h2>\\n                        </td>\\n                        <td><span *ngIf=\\\"item.position\\\">{{item.position.name}}</span><span *ngIf=\\\"!item.position\\\">-</span></td>\\n                        <td>\\n                            <div class=\\\"dropdown action-label\\\">\\n                                <a class=\\\"btn btn-white btn-sm rounded dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\n                                    <span *ngIf=\\\"item.active\\\"><i class=\\\"fa fa-dot-circle-o text-success\\\"></i> Active</span>\\n                                    <span *ngIf=\\\"!item.active\\\"><i class=\\\"fa fa-dot-circle-o text-danger\\\"></i> Inactive</span>\\n                                </a>\\n                            </div>\\n                        </td>\\n                        <td>\\n                            <div class=\\\"dropdown\\\" *ngIf=\\\"item.skills.length > 0\\\">\\n                                <a style=\\\"min-width: 120px\\\" class=\\\"btn btn-white btn-sm rounded dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">Show <i class=\\\"caret\\\"></i></a>\\n                                <ul class=\\\"dropdown-menu\\\" style=\\\"min-width: 120px\\\">\\n                                    <li style=\\\"min-width: 120px\\\" *ngFor=\\\"let s of item.skills\\\"><a href=\\\"#\\\">{{s.name}}</a></li>\\n                                </ul>\\n                            </div>\\n                        </td>\\n                        <td class=\\\"text-right\\\">\\n                            <div class=\\\"dropdown\\\">\\n                                <a href=\\\"#\\\" class=\\\"action-icon dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\"><i class=\\\"fa fa-ellipsis-v\\\"></i></a>\\n                                <ul class=\\\"dropdown-menu pull-right\\\">\\n                                    <li><a (click)=\\\"setItem(item)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#edit_employee\\\"><i class=\\\"fa fa-pencil m-r-5\\\"></i> Edit</a></li>\\n                                    <li><a (click)=\\\"setItem(item)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#delete_employee\\\"><i class=\\\"fa fa-trash-o m-r-5\\\"></i> Delete</a></li>\\n                                </ul>\\n                            </div>\\n                        </td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div id=\\\"edit_employee\\\" class=\\\"modal custom-modal fade\\\" role=\\\"dialog\\\" *ngIf=\\\"item\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        <div class=\\\"modal-content modal-lg\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Edit Employee</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"m-b-30\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">Name <span class=\\\"text-danger\\\">*</span></label>\\n                                <input class=\\\"form-control\\\" [value]=\\\"item.name\\\" #namee type=\\\"text\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">SurName <span class=\\\"text-danger\\\">*</span></label>\\n                                <input class=\\\"form-control\\\" #surnamee [value]=\\\"item.surname\\\" type=\\\"text\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">Department <span class=\\\"text-danger\\\">*</span></label>\\n                                <div class=\\\"dropdown\\\" style=\\\"width: 100%\\\" *ngIf=\\\"department$ | async as department\\\">\\n                                    <a class=\\\"btn btn-white  rounded dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\" style=\\\"width: 100%\\\">\\n                                        {{item.department.name}}\\n                                        <i class=\\\"caret\\\"></i>\\n                                    </a>\\n                                    <ul class=\\\"dropdown-menu\\\" style=\\\"width: 100%\\\">\\n                                        <li *ngFor=\\\"let item of department\\\" style=\\\"width: 100%\\\" (click)=\\\"setDepartmente(item)\\\">\\n                                            <a>{{ item.name }}</a>\\n                                        </li>\\n                                    </ul>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">Position <span class=\\\"text-danger\\\">*</span></label>\\n                                <div class=\\\"dropdown\\\" style=\\\"width: 100%\\\" *ngIf=\\\"positions$ | async as position\\\">\\n                                    <a class=\\\"btn btn-white  rounded dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\" style=\\\"width: 100%\\\">\\n                                        {{item.position.name}}\\n                                        <i class=\\\"caret\\\"></i>\\n                                    </a>\\n                                    <ul class=\\\"dropdown-menu\\\" style=\\\"width: 100%\\\">\\n                                        <li *ngFor=\\\"let item of position\\\" style=\\\"width: 100%\\\" (click)=\\\"setPose(item)\\\">\\n                                            <a>{{ item.name }}</a>\\n                                        </li>\\n                                    </ul>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <table class=\\\"table table-striped custom-table\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>Skills</th>\\n                                        <th></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody *ngIf=\\\"skills$ | async as skills\\\">\\n                                    <tr *ngFor=\\\"let item2 of skills\\\">\\n                                        <td>{{ item2.name }}</td>\\n                                        <td><input [value]=\\\"item2._id\\\" [checked]=\\\"check(item2)\\\" (change)=\\\"setSkillse($event, item2)\\\" type=\\\"checkbox\\\"></td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <table class=\\\"table table-striped custom-table\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>Status</th>\\n                                        <th></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr>\\n                                        <td>Active</td>\\n                                        <td><input (click)=\\\"setActivee($event)\\\" type=\\\"checkbox\\\"></td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"m-t-20 text-center\\\">\\n                        <button class=\\\"btn btn-primary btn-lg\\\" data-dismiss=\\\"modal\\\" (click)=\\\"editConfirm(item)\\\">Create Employee</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div id=\\\"delete_employee\\\" class=\\\"modal custom-modal fade\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content modal-md\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Delete Employee</h4>\\n            </div>\\n            <form>\\n                <div class=\\\"modal-body card-box\\\">\\n                    <p>Are you sure want to delete this?</p>\\n                    <div class=\\\"m-t-20\\\"> <a class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</a>\\n                        <button data-dismiss=\\\"modal\\\"  class=\\\"btn btn-danger\\\" (click)=\\\"delete(item)\\\">Delete</button>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n<div id=\\\"add_employee\\\" class=\\\"modal custom-modal fade\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        <div class=\\\"modal-content modal-lg\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Employee</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"m-b-30\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">Name <span class=\\\"text-danger\\\">*</span></label>\\n                                <input class=\\\"form-control\\\" #name type=\\\"text\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">SurName <span class=\\\"text-danger\\\">*</span></label>\\n                                <input class=\\\"form-control\\\" #surname type=\\\"text\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">Department <span class=\\\"text-danger\\\">*</span></label>\\n                                <div class=\\\"dropdown\\\" style=\\\"width: 100%\\\" *ngIf=\\\"department$ | async as department\\\">\\n                                    <a class=\\\"btn btn-white  rounded dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\" style=\\\"width: 100%\\\">Select <i class=\\\"caret\\\"></i></a>\\n                                    <ul class=\\\"dropdown-menu\\\" style=\\\"width: 100%\\\">\\n                                        <li *ngFor=\\\"let item of department\\\" style=\\\"width: 100%\\\" (click)=\\\"setDepartment(item)\\\">\\n                                            <a>{{ item.name }}</a>\\n                                        </li>\\n                                    </ul>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"control-label\\\">Position <span class=\\\"text-danger\\\">*</span></label>\\n                                <div class=\\\"dropdown\\\" style=\\\"width: 100%\\\" *ngIf=\\\"positions$ | async as position\\\">\\n                                    <a class=\\\"btn btn-white  rounded dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\" style=\\\"width: 100%\\\">Select <i class=\\\"caret\\\"></i></a>\\n                                    <ul class=\\\"dropdown-menu\\\" style=\\\"width: 100%\\\">\\n                                        <li *ngFor=\\\"let item of position\\\" style=\\\"width: 100%\\\" (click)=\\\"setPos(item)\\\">\\n                                            <a>{{ item.name }}</a>\\n                                        </li>\\n                                    </ul>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <table class=\\\"table table-striped custom-table\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th>Skills</th>\\n                                            <th></th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody *ngIf=\\\"skills$ | async as skills\\\">\\n                                        <tr *ngFor=\\\"let item of skills\\\">\\n                                            <td>{{ item.name }}</td>\\n                                            <td><input [value]=\\\"item._id\\\" (change)=\\\"setSkills($event, item)\\\" type=\\\"checkbox\\\"></td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <table class=\\\"table table-striped custom-table\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th>Status</th>\\n                                        <th></th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr>\\n                                            <td>Active</td>\\n                                            <td><input (click)=\\\"setActive($event)\\\" type=\\\"checkbox\\\"></td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"m-t-20 text-center\\\">\\n                        <button class=\\\"btn btn-primary btn-lg\\\" data-dismiss=\\\"modal\\\" (click)=\\\"createConfirm()\\\">Create Employee</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { Employee } from './models/employee';\nimport { createEmployee, deleteEmployee, editEmployee, getAllEmployee } from './store/actions';\nimport { selectAllEmployee } from './store/selectors';\nimport { Skill } from '../settings/skill/models/skill';\nimport { Position } from '../settings/position/models/positions';\nimport { Department } from '../settings/department/models/department';\nimport { selectSkills } from '../settings/skill/store/selectors';\nimport { selectPositions } from '../settings/position/store/selectors';\nimport { selectDepartments } from '../settings/department/store/selectors';\nimport { getSkills } from '../settings/skill/store/actions';\nimport { getPositions } from '../settings/position/store/actions';\nimport { getDepartments } from '../settings/department/store/actions';\n\n\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n})\nexport class EmployeeComponent implements OnInit {\n  allEmployee$: Observable<Employee[]>;\n  skills$: Observable<Skill[]>;\n  positions$: Observable<Position[]>;\n  department$: Observable<Department[]>;\n\n  item = null;\n  @ViewChild('name') name: ElementRef;\n  @ViewChild('surname') surname: ElementRef;\n  skills = {};\n  department = null;\n  position = null;\n  active;\n\n  @ViewChild('namee') namee: ElementRef;\n  @ViewChild('surnamee') surnamee: ElementRef;\n  @ViewChild('namesearch') namesearch: ElementRef;\n  skillse = {};\n  departmente;\n  positione;\n  activee;\n\n\n  constructor(private store: Store<any>) {}\n\n  ngOnInit() {\n    this.getEmployee();\n    this.allEmployee$ = this.store.pipe(select(selectAllEmployee));\n  }\n\n  select() {\n    this.store.dispatch(new getSkills());\n    this.store.dispatch(new getPositions());\n    this.store.dispatch(new getDepartments());\n\n    this.skills$ = this.store.pipe(select(selectSkills));\n    this.positions$ = this.store.pipe(select(selectPositions));\n    this.department$ = this.store.pipe(select(selectDepartments));\n  }\n\n  getEmployee() {\n    const query = {};\n    if(this.namesearch.nativeElement.value.length > 1) {\n      query['name'] = this.namesearch.nativeElement.value\n    }\n    this.store.dispatch(new getAllEmployee(query));\n  }\n\n  setItem(data) {\n    this.item = data;\n    this.select();\n  }\n\n  createConfirm() {\n    let name = this.name.nativeElement.value;\n    let surname = this.surname.nativeElement.value;\n    if (name && name.length > 1 && surname && surname.length > 1) {\n      this.store.dispatch(new createEmployee({name, surname, department: this.department, position: this.position, skills: Object.keys(this.skills), active: this.active}));\n    }\n  }\n\n  editConfirm(data) {\n    let name = this.namee.nativeElement.value;\n    let surname = this.surnamee.nativeElement.value;\n    if (name && name.length > 1 && surname && surname.length > 1) {\n      this.store.dispatch(new editEmployee({data: {name, surname, department: this.departmente, position: this.positione, skills: Object.keys(this.skillse), active: this.activee}, id: data._id}));\n    }\n  }\n\n  delete(data) {\n    this.store.dispatch(new deleteEmployee(data._id));\n  }\n\n  setDepartment(data) {\n    this.department = data._id;\n  }\n\n  setPos(data) {\n    this.position = data._id;\n  }\n\n  setSkills(e, data) {\n    if(e.target.checked) {\n      this.skills[data._id] = data._id;\n    } else {\n      delete this.skills[data._id];\n    }\n  }\n\n  setActive(e) {\n    if (e.target.checked) {\n      this.active = 1;\n    } else {\n      this.active = 0;\n    }\n  }\n\n  check(item) {\n    for(let i of this.item.skills) {\n      if (i._id == item._id) return true;\n    }\n  }\n\n  setDepartmente(data) {\n    this.departmente = data._id;\n  }\n\n  setPose(data) {\n    this.positione = data._id;\n  }\n\n  setSkillse(e, data) {\n    if(e.target.checked) {\n      this.skillse[data._id] = data._id;\n    } else {\n      delete this.skillse[data._id];\n    }\n  }\n\n  setActivee(e) {\n    if (e.target.checked) {\n      this.activee = 1;\n    } else {\n      this.activee = 0;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { reducer } from './store/reducers/index';\nimport { AllEmployeeEffect } from './store/effects/index';\n\nimport { EmployeeRoutingModule } from './employee-routing.module';\nimport { EmployeeComponent } from './employee.component';\n\n\n@NgModule({\n  declarations: [\n    EmployeeComponent,\n  ],\n  imports: [\n    CommonModule,\n    EmployeeRoutingModule,\n    StoreModule.forFeature('employee', reducer),\n    EffectsModule.forFeature([AllEmployeeEffect]),\n  ],\n  providers: []\n})\nexport class EmployeeModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Employee } from '../models/employee';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmployeeService {\n  constructor(private http: HttpClient) {}\n\n  getAllEmployee(data): Observable<Employee[]>{\n    return this.http.get<Employee[]>('https://crm-mean.herokuapp.com/api/employee', {\n      params: data\n    });\n  }\n\n  deleteEmployee(data): Observable<Employee> {\n    return this.http.delete<Employee>(`https://crm-mean.herokuapp.com/api/employee/${data}`);\n  }\n\n  createEmployee(data): Observable<Employee> {\n    return this.http.post<Employee>(`https://crm-mean.herokuapp.com/api/employee`, data);\n  }\n\n  editEmployee({data, id}): Observable<Employee> {\n    return this.http.patch<Employee>(`https://crm-mean.herokuapp.com/api/employee/${id}`, data);\n  }\n}","import { Action } from '@ngrx/store';\nimport { Employee } from '../../models/employee';\n\nexport enum ActionTypes {\n  GET_ALL_EMPLOYEE = '[Employee Component] GET_ALL_EMPLOYEE',\n  GET_ALL_EMPLOYEE_SUCCESS = '[Employee Component] GET_ALL_EMPLOYEE_SUCCESS',\n  GET_ALL_EMPLOYEE_FAIL = '[Employee Component] GET_ALL_EMPLOYEE_FAIL',\n\n  GET_EMPLOYEE = '[Employee Component] GET_EMPLOYEE',\n  GET_EMPLOYEE_SUCCESS = '[Employee Component] GET_EMPLOYEE_SUCCESS',\n  GET_EMPLOYEE_FAIL = '[Employee Component] GET_EMPLOYEE_FAIL',\n\n  EDIT_EMPLOYEE = '[Employee Component] EDIT_EMPLOYEE',\n  EDIT_EMPLOYEE_SUCCESS = '[Employee Component] EDIT_EMPLOYEE_SUCCESS',\n  EDIT_EMPLOYEE_FAIL = '[Employee Component] EDIT_EMPLOYEE_FAIL',\n\n  DELETE_EMPLOYEE = '[Employee Component] DELETE_EMPLOYEE',\n  DELETE_EMPLOYEE_SUCCESS = '[Employee Component] DELETE_EMPLOYEE_SUCCESS',\n  DELETE_EMPLOYEE_FAIL = '[Employee Component] DELETE_EMPLOYEE_FAIL',\n\n  CREATE_EMPLOYEE = '[Employee Component] CREATE_EMPLOYEE',\n  CREATE_EMPLOYEE_SUCCESS = '[Employee Component] CREATE_EMPLOYEE_SUCCESS',\n  CREATE_EMPLOYEE_FAIL = '[Employee Component] CREATE_EMPLOYEE_FAIL',\n}\n\nexport class getAllEmployee implements Action {\n  readonly type = ActionTypes.GET_ALL_EMPLOYEE;\n\n  constructor(public payload: any) {}\n}\n\nexport class getAllEmployeeSuccess implements Action {\n  readonly type = ActionTypes.GET_ALL_EMPLOYEE_SUCCESS;\n\n  constructor(public payload: Employee[]) {}\n}\n\nexport class getAllEmployeeFail implements Action {\n  readonly type = ActionTypes.GET_ALL_EMPLOYEE_FAIL;\n\n  constructor(public payload: string) {}\n}\n\n\nexport class getEmployee implements Action {\n  readonly type = ActionTypes.GET_EMPLOYEE;\n\n  constructor(public payload: number) {}\n}\n\nexport class getEmployeeSuccess implements Action {\n  readonly type = ActionTypes.GET_EMPLOYEE_SUCCESS;\n\n  constructor(public payload: Employee) {}\n}\n\nexport class getEmployeeFail implements Action {\n  readonly type = ActionTypes.GET_EMPLOYEE_FAIL;\n\n  constructor(public payload: string) {}\n}\n\n\nexport class editEmployee implements Action {\n  readonly type = ActionTypes.EDIT_EMPLOYEE;\n\n  constructor(public payload: {data: Employee, id: number | string}) {}\n}\n\nexport class editEmployeeSuccess implements Action {\n  readonly type = ActionTypes.EDIT_EMPLOYEE_SUCCESS;\n\n  constructor(public payload: Employee) {}\n}\n\nexport class editEmployeeFail implements Action {\n  readonly type = ActionTypes.EDIT_EMPLOYEE_FAIL;\n\n  constructor(public payload: any[]) {}\n}\n\n\nexport class deleteEmployee implements Action {\n  readonly type = ActionTypes.DELETE_EMPLOYEE;\n\n  constructor(public payload: string) {}\n}\n\nexport class deleteEmployeeSuccess implements Action {\n  readonly type = ActionTypes.DELETE_EMPLOYEE_SUCCESS;\n\n  constructor(public payload: number | string) {}\n}\n\nexport class deleteEmployeeFail implements Action {\n  readonly type = ActionTypes.DELETE_EMPLOYEE_FAIL;\n\n  constructor(public payload: string) {}\n}\n\n\nexport class createEmployee implements Action {\n  readonly type = ActionTypes.CREATE_EMPLOYEE;\n\n  constructor(public payload: Employee) {}\n}\n\nexport class createEmployeeSuccess implements Action {\n  readonly type = ActionTypes.CREATE_EMPLOYEE_SUCCESS;\n\n  constructor(public payload: Employee) {}\n}\n\nexport class createEmployeeFail implements Action {\n  readonly type = ActionTypes.CREATE_EMPLOYEE_FAIL;\n\n  constructor(public payload: any[]) {}\n}\n\n\nexport type EmployeeAction = getAllEmployee | getAllEmployeeSuccess |\n  getAllEmployeeFail | getEmployee | getEmployeeSuccess | getEmployeeFail |\n  editEmployee | editEmployeeSuccess | editEmployeeFail | deleteEmployee |\n  deleteEmployeeSuccess | deleteEmployeeFail | createEmployee |\n  createEmployeeSuccess | createEmployeeFail;","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport {\n  ActionTypes,\n  createEmployee, createEmployeeFail,\n  createEmployeeSuccess, deleteEmployee, deleteEmployeeFail, deleteEmployeeSuccess, editEmployee, editEmployeeSuccess,\n  getEmployeeFail,\n  getAllEmployeeSuccess, getAllEmployee\n} from '../actions';\nimport { EmployeeService } from '../../services/employee.service';\n\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class AllEmployeeEffect {\n  constructor(private actions$: Actions, private skillsService: EmployeeService) {}\n\n  @Effect()\n  getAllEmployee$ = this.actions$.pipe(\n    ofType(ActionTypes.GET_ALL_EMPLOYEE),\n    switchMap((data: getAllEmployee) => this.skillsService.getAllEmployee(data.payload).pipe(\n      map(res => new getAllEmployeeSuccess(res)),\n      catchError(error => of(new getEmployeeFail(error)))\n    ))\n  );\n\n  @Effect()\n  createEmployee$ = this.actions$.pipe(\n    ofType(ActionTypes.CREATE_EMPLOYEE),\n    switchMap((data: createEmployee) => this.skillsService.createEmployee(data.payload).pipe(\n      map(res => new createEmployeeSuccess(res)),\n      catchError(error => of(new createEmployeeFail(error)))\n    ))\n  );\n\n  @Effect()\n  deleteEmployee$ = this.actions$.pipe(\n    ofType(ActionTypes.DELETE_EMPLOYEE),\n    switchMap((data: deleteEmployee) => this.skillsService.deleteEmployee(data.payload).pipe(\n      map(() => new deleteEmployeeSuccess(data.payload)),\n      catchError(error => of(new deleteEmployeeFail(error)))\n    ))\n  );\n\n  @Effect()\n  editEmployee$ = this.actions$.pipe(\n    ofType(ActionTypes.EDIT_EMPLOYEE),\n    switchMap((data: editEmployee) => this.skillsService.editEmployee(data.payload).pipe(\n      map((res) => new editEmployeeSuccess(res)),\n      catchError(error => of(new deleteEmployeeFail(error)))\n    ))\n  );\n}","import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport { ActionTypes, EmployeeAction } from '../actions/index';\nimport { Employee } from '../../models/employee';\n\n\nexport interface AllEmployeeState extends EntityState<Employee> {\n  loading: boolean;\n  deletePending: boolean;\n  createPending: boolean;\n  editPending: boolean;\n  error: string;\n  deleteError: string;\n  createErrors: any[];\n  editErrors: any[];\n  loaded: boolean;\n}\n\nconst adapter: EntityAdapter<Employee> = createEntityAdapter<Employee>({\n  selectId: state => state._id,\n  sortComparer: (dataA, dataB) => dataA.name.localeCompare(dataB.name),\n});\n\nconst initialState: AllEmployeeState = adapter.getInitialState({\n  loading: false,\n  deletePending: false,\n  createPending: false,\n  editPending: false,\n  error: null,\n  deleteError: null,\n  createErrors: [],\n  editErrors: [],\n  loaded: false,\n});\n\nexport const reducer = (state = initialState, action: EmployeeAction): AllEmployeeState => {\n  switch (action.type) {\n    case ActionTypes.GET_ALL_EMPLOYEE: {\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    }\n    case ActionTypes.GET_ALL_EMPLOYEE_SUCCESS: {\n      return adapter.addAll(action.payload, {\n        ...state,\n        loading: false,\n        error: null,\n        loaded: true,\n      });\n    }\n    case ActionTypes.GET_ALL_EMPLOYEE_FAIL: {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    }\n    case ActionTypes.DELETE_EMPLOYEE: {\n      return {\n        ...state,\n        deletePending: true,\n        deleteError: null,\n      };\n    }\n    case ActionTypes.DELETE_EMPLOYEE_SUCCESS: {\n      const newState = {\n        ...state,\n        deletePending: false,\n        deleteError: null,\n      };\n      return adapter.removeOne(<string>action.payload, newState);\n    }\n    case ActionTypes.DELETE_EMPLOYEE_FAIL: {\n      return {\n        ...state,\n        deletePending: false,\n        deleteError: action.payload,\n      };\n    }\n    case ActionTypes.CREATE_EMPLOYEE: {\n      return {\n        ...state,\n        createPending: true,\n        createErrors: []\n      };\n    }\n    case ActionTypes.CREATE_EMPLOYEE_SUCCESS: {\n      return adapter.addOne(action.payload, {\n        ...state,\n        createPending: false,\n        createErrors: [],\n      });\n    }\n    case ActionTypes.CREATE_EMPLOYEE_FAIL: {\n      return {\n        ...state,\n        createPending: false,\n        createErrors: action.payload\n      }\n    }\n    case ActionTypes.EDIT_EMPLOYEE: {\n      return {\n        ...state,\n        editPending: true,\n        editErrors: [],\n      };\n    }\n    case ActionTypes.EDIT_EMPLOYEE_SUCCESS: {\n      return {\n        ...state,\n        editPending: false,\n        editErrors: [],\n        entities: {\n          ...state.entities,\n          [action.payload._id]: action.payload\n        }\n      };\n    }\n    case ActionTypes.EDIT_EMPLOYEE_FAIL: {\n      return {\n        ...state,\n        editPending: false,\n        editErrors: action.payload,\n      };\n    }\n    // case ActionTypes.GET_EMPLOYEE: {\n    //   return {\n    //     ...state,\n    //     loading: true,\n    //     error: null,\n    //   };\n    // }\n    // case ActionTypes.GET_EMPLOYEE_SUCCESS: {\n    //   return {\n    //     ...state,\n    //     loading: false,\n    //     EMPLOYEE: action.payload,\n    //     error: null,\n    //   }\n    // }\n    // case ActionTypes.GET_EMPLOYEE_FAIL: {\n    //   return {\n    //     ...state,\n    //     loading: false,\n    //     error: action.payload\n    //   }\n    // }\n    default: {\n      return state;\n    }\n  }\n};","import { createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromAllEmployee from '../reducers';\nimport { Employee } from '../../models/employee';\n\n\nexport const selectAllEmployeeState = createFeatureSelector<fromAllEmployee.AllEmployeeState>('employee');\n\nexport const selectAllEmployee = createSelector(selectAllEmployeeState, (state: fromAllEmployee.AllEmployeeState): Employee[] => {\n  return Object.keys(state.entities).map((item): Employee => state.entities[item]);\n});\n\nexport const selectLoading = createSelector(selectAllEmployeeState, (state: fromAllEmployee.AllEmployeeState): boolean => {\n  return state.loading;\n});\n\nexport const selectError = createSelector(selectAllEmployeeState, (state: fromAllEmployee.AllEmployeeState): string => {\n  return state.error;\n});"],"sourceRoot":""}