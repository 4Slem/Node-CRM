{"version":3,"sources":["webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/containers/login/login.component.html","webpack:///./src/app/auth/containers/login/login.component.ts","webpack:///./src/app/auth/containers/register/register.component.html","webpack:///./src/app/auth/containers/register/register.component.ts","webpack:///./src/app/auth/store/actions/register.actions.ts","webpack:///./src/app/auth/store/effects/index.ts","webpack:///./src/app/auth/store/effects/login.effects.ts","webpack:///./src/app/auth/store/effects/register.effects.ts","webpack:///./src/app/auth/store/reducers/index.ts","webpack:///./src/app/auth/store/reducers/login.reducer.ts","webpack:///./src/app/auth/store/reducers/register.reducer.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthComponent } from './auth.component';\nimport { RegisterComponent } from './containers/register/register.component';\nimport { LoginComponent } from './containers/login/login.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: AuthComponent,\n  children: [{\n    path: 'login',\n    component: LoginComponent\n  }, {\n    path: 'register',\n    component: RegisterComponent\n  }, {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  }]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","module.exports = \"<div class=\\\"main-wrapper\\\">\\n    <div class=\\\"account-page\\\">\\n        <div class=\\\"container\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n})\nexport class AuthComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { reducers } from './store/reducers';\nimport { effects } from './store/effects';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './containers/login/login.component';\nimport { RegisterComponent } from './containers/register/register.component';\n\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    StoreModule.forFeature('auth', reducers),\n    EffectsModule.forFeature(effects),\n  ],\n})\nexport class AuthModule { }\n","module.exports = \"<h3 class=\\\"account-title\\\">Login</h3>\\n<div class=\\\"account-box\\\">\\n    <div class=\\\"account-wrapper\\\">\\n        <div class=\\\"account-logo\\\">\\n            <a href=\\\"#\\\"><img src=\\\"./assets/img/logo2.png\\\" alt=\\\"Preadmin\\\"></a>\\n        </div>\\n        <div>\\n            <div class=\\\"form-group form-focus\\\">\\n                <label class=\\\"control-label\\\" >Username or Email</label>\\n                <input class=\\\"form-control floating\\\" #email type=\\\"text\\\" />\\n            </div>\\n            <div class=\\\"form-group form-focus\\\">\\n                <label class=\\\"control-label\\\">Password</label>\\n                <input class=\\\"form-control floating\\\" #password type=\\\"password\\\" />\\n            </div>\\n            <div class=\\\"form-group text-center\\\">\\n                <button class=\\\"btn btn-primary btn-block account-btn\\\" (click)=\\\"login()\\\">Login</button>\\n            </div>\\n            <div class=\\\"text-center\\\">\\n                <a routerLink=\\\"/auth/register\\\">Registration</a>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import {Component, ElementRef, ViewChild} from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { AuthState } from '../../store/reducers';\nimport { Login } from '../../store/actions/login.actions';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  constructor(private store: Store<AuthState>) {}\n  @ViewChild('email') email: ElementRef;\n  @ViewChild('password') password: ElementRef;\n\n  login() {\n    const email = this.email.nativeElement.value;\n    const password = this.password.nativeElement.value;\n    if(email.length > 0 && password.length) {\n      this.store.dispatch(new Login({email, password}));\n    }\n  }\n}\n","module.exports = \"<h3 class=\\\"account-title\\\">Register</h3>\\n<div class=\\\"account-box\\\">\\n    <div class=\\\"account-wrapper\\\">\\n        <div class=\\\"account-logo\\\">\\n            <a href=\\\"#\\\"><img src=\\\"./assets/img/logo2.png\\\" alt=\\\"Preadmin\\\"></a>\\n        </div>\\n        <div >\\n        <div class=\\\"form-group form-focus\\\">\\n            <label class=\\\"control-label\\\">Email</label>\\n            <input class=\\\"form-control floating\\\" #email type=\\\"text\\\" />\\n        </div>\\n        <div class=\\\"form-group form-focus\\\">\\n            <label class=\\\"control-label\\\">Password</label>\\n            <input class=\\\"form-control floating\\\" #password type=\\\"password\\\" />\\n        </div>\\n        <div class=\\\"form-group form-focus\\\">\\n            <label class=\\\"control-label\\\">Repeat Password</label>\\n            <input class=\\\"form-control floating\\\" #password2 type=\\\"password\\\" />\\n        </div>\\n        <div class=\\\"form-group text-center\\\">\\n            <button class=\\\"btn btn-primary btn-block account-btn\\\" (click)=\\\"register()\\\">Register</button>\\n        </div>\\n        <div class=\\\"text-center\\\">\\n            <a routerLink=\\\"/auth/login\\\">Already have an account?</a>\\n        </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { AuthState } from '../../store/reducers';\nimport { Register } from '../../store/actions/register.actions';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent implements OnInit{\n  constructor(private store: Store<AuthState>) {}\n  @ViewChild('email') email: ElementRef;\n  @ViewChild('password') password: ElementRef;\n  @ViewChild('password2') password2: ElementRef;\n\n  ngOnInit() {}\n\n  register() {\n    const email = this.email.nativeElement.value;\n    const password = this.password.nativeElement.value;\n    const password2 = this.password2.nativeElement.value;\n    if(email.length > 0 && password.length) {\n      if (password === password2) {\n        this.store.dispatch(new Register({email, password}));\n      }\n    }\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { User } from '../../models/user';\n\nexport enum ActionTypes {\n  REGISTER = '[Auth Component] REGISTER',\n  REGISTER_SUCCESS = '[Auth Component] REGISTER_SUCCESS',\n  REGISTER_FAIL = '[Auth Component] REGISTER_FAIL',\n}\n\nexport class Register implements Action {\n  readonly type = ActionTypes.REGISTER;\n  constructor(public payload: User) {}\n}\n\nexport class RegisterSuccess implements Action {\n  readonly type = ActionTypes.REGISTER_SUCCESS;\n}\n\nexport class RegisterFail implements Action {\n  readonly type = ActionTypes.REGISTER_FAIL;\n  constructor(public payload: string) {}\n}\n\nexport type RegisterAction = Register | RegisterSuccess | RegisterFail;","import { LoginEffects } from './login.effects';\nimport { RegisterEffects } from './register.effects';\n\nexport const effects: any[] = [LoginEffects, RegisterEffects];","import { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { mergeMap, map, catchError } from 'rxjs/operators';\n\nimport * as loginActions from '../actions/login.actions';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Injectable()\nexport class LoginEffects {\n  constructor(private actions$: Actions, private authService: AuthService, private router: Router) {}\n\n  @Effect()\n  login$ = this.actions$\n    .pipe(\n      ofType(loginActions.ActionTypes.LOGIN),\n      mergeMap((data: loginActions.Login) => {\n        return this.authService.login(data.payload)\n          .pipe(\n            map((res) => {\n              this.router.navigate(['/employee']);\n              return new loginActions.LoginSuccess(res);\n            }),\n            catchError((err) => of(new loginActions.LoginFail(err.error.message)))\n          )\n        }\n      )\n    );\n\n  @Effect()\n  logOut$ = this.actions$\n    .pipe(\n      ofType(loginActions.ActionTypes.LOGOUT),\n      mergeMap(() => {\n        return this.authService.logout()\n          .pipe(\n            map(() => {\n              this.router.navigate(['/auth/login']);\n              return new loginActions.LogOutSuccess()\n            }),\n            catchError(() => of(new loginActions.LogOutFail()))\n          )\n        }\n      )\n    );\n}","import { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { mergeMap, map, catchError } from 'rxjs/operators';\n\nimport * as registerActions from '../actions/register.actions';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Injectable()\nexport class RegisterEffects {\n  constructor(private actions$: Actions, private authService: AuthService, private router: Router) {}\n\n  @Effect()\n  register = this.actions$\n    .pipe(\n      ofType(registerActions.ActionTypes.REGISTER),\n      mergeMap((data: registerActions.Register) => this.authService.register(data.payload)\n        .pipe(\n          map(() => {\n            this.router.navigate(['/auth/login']);\n            return new registerActions.RegisterSuccess()\n          }),\n          catchError((err) => of(new registerActions.RegisterFail(err.error.message)))\n        )\n      )\n    );\n}","import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromLogin from './login.reducer';\nimport * as fromRegister from './register.reducer';\n\nexport interface AuthState {\n  login: fromLogin.LoginState,\n  register: fromRegister.RegisterState,\n}\n\nexport const reducers: ActionReducerMap<AuthState> = {\n  login: fromLogin.reducer,\n  register: fromRegister.reducer,\n};\n\nexport const getAuthState = createFeatureSelector<AuthState>('auth');\n\nexport const getLoginState = createSelector(getAuthState, (state: AuthState): fromLogin.LoginState => state.login);\nexport const getRegisterState = createSelector(getAuthState, (state: AuthState): fromRegister.RegisterState => state.register);","import {ActionTypes, LoginAction} from '../actions/login.actions';\n\nexport interface LoginState {\n  isLogetIn: boolean;\n  error: string | null;\n  email: string;\n}\n\nexport const initialState: LoginState = {\n  isLogetIn: false,\n  error: null,\n  email: null,\n};\n\nexport const reducer = (state = initialState, action: LoginAction): LoginState => {\n  switch (action.type) {\n    case ActionTypes.LOGIN: {\n      return {\n        ...state,\n        isLogetIn: false,\n        error: null,\n      };\n    }\n    case ActionTypes.LOGIN_SUCCESS: {\n      return {\n        ...state,\n        isLogetIn: true,\n        error: null,\n        email: action.payload.email\n      };\n    }\n    case ActionTypes.LOGIN_FAIL: {\n      return {\n        ...state,\n        isLogetIn: false,\n        error: action.payload,\n      };\n    }\n    case ActionTypes.LOGOUT_SUCCESS: {\n      return {\n        ...state,\n        isLogetIn: false,\n        error: null,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n};","import { ActionTypes, RegisterAction } from '../actions/register.actions';\n\nexport interface RegisterState {\n  loading: boolean;\n  error: string | null;\n}\n\nexport const initialState: RegisterState = {\n  loading: false,\n  error: null,\n};\n\nexport const reducer = (state = initialState, action: RegisterAction): RegisterState => {\n  switch (action.type) {\n    case ActionTypes.REGISTER: {\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    }\n    case ActionTypes.REGISTER_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: null,\n      };\n    }\n    case ActionTypes.REGISTER_FAIL: {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};"],"sourceRoot":""}