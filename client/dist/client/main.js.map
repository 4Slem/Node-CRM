{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/@core/core-routing.module.ts","webpack:///./src/app/@core/core.component.html","webpack:///./src/app/@core/core.component.ts","webpack:///./src/app/@core/core.module.ts","webpack:///./src/app/@core/guards/auth.guard.ts","webpack:///./src/app/@core/services/http.service.ts","webpack:///./src/app/@core/store/index.ts","webpack:///./src/app/@core/store/reducers/index.ts","webpack:///./src/app/auth/services/auth.service.ts","webpack:///./src/app/auth/store/actions/login.actions.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./../admin/admin.module\": [\n\t\t\"./src/app/admin/admin.module.ts\",\n\t\t\"admin-admin-module\"\n\t],\n\t\"./../auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\",\n\t\t\"auth-auth-module\"\n\t],\n\t\"./department/department.module\": [\n\t\t\"./src/app/admin/settings/department/department.module.ts\",\n\t\t\"default~department-department-module~employee-employee-module~position-position-module~skill-skill-m~dd0f0060\",\n\t\t\"common\",\n\t\t\"department-department-module\"\n\t],\n\t\"./employee/employee.module\": [\n\t\t\"./src/app/admin/employee/employee.module.ts\",\n\t\t\"default~department-department-module~employee-employee-module~position-position-module~skill-skill-m~dd0f0060\",\n\t\t\"common\",\n\t\t\"employee-employee-module\"\n\t],\n\t\"./position/position.module\": [\n\t\t\"./src/app/admin/settings/position/position.module.ts\",\n\t\t\"default~department-department-module~employee-employee-module~position-position-module~skill-skill-m~dd0f0060\",\n\t\t\"common\",\n\t\t\"position-position-module\"\n\t],\n\t\"./settings/settings.module\": [\n\t\t\"./src/app/admin/settings/settings.module.ts\",\n\t\t\"settings-settings-module\"\n\t],\n\t\"./skill/skill.module\": [\n\t\t\"./src/app/admin/settings/skill/skill.module.ts\",\n\t\t\"default~department-department-module~employee-employee-module~position-position-module~skill-skill-m~dd0f0060\",\n\t\t\"common\",\n\t\t\"skill-skill-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\n\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  { path: '', loadChildren: './../admin/admin.module#AdminModule', canActivate: [AuthGuard]},\n  { path: 'auth', loadChildren: './../auth/auth.module#AuthModule' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    preloadingStrategy: PreloadAllModules\n  })],\n  exports: [RouterModule]\n})\nexport class CoreRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './core.component.html',\n})\nexport class CoreComponent { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { StoreRouterConnectingModule, RouterStateSerializer } from '@ngrx/router-store';\nimport { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { CoreRoutingModule } from './core-routing.module';\n\nimport { CoreComponent } from './core.component';\n\nimport { HttpService } from './services/http.service';\n\nimport { reducers, CustorSerializer } from './store';\n\n\n@NgModule({\n  declarations: [\n    CoreComponent,\n  ],\n  imports: [\n    BrowserModule,\n    CoreRoutingModule,\n    HttpClientModule,\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([]),\n    StoreRouterConnectingModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      multi: true,\n      useClass: HttpService,\n    },\n    {\n      provide: RouterStateSerializer,\n      useClass: CustorSerializer,\n    }\n  ],\n  bootstrap: [CoreComponent]\n})\nexport class CoreModule { }\n","import { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../../auth/services/auth.service';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n  constructor(private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (AuthService.isAuth()) {\n      return true;\n    } else {\n      this.router.navigate(['/auth']);\n    }\n  }\n\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return this.canActivate(childRoute, state);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthService } from '../../auth/services/auth.service';\nimport { LogOut } from '../../auth/store/actions/login.actions';\nimport {Router} from \"@angular/router\";\n\n\n@Injectable()\nexport class HttpService implements HttpInterceptor {\n  constructor(private store: Store<any>, private router: Router) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (AuthService.isAuth()) {\n      req = req.clone({\n        headers: req.headers.set('Authorization', AuthService.getToken())\n      });\n    }\n    return next.handle(req).pipe(\n      catchError(error => {\n        if (error.status === 401) {\n          this.router.navigate(['/auth/login']);\n          this.store.dispatch(new LogOut());\n        }\n        return of(error);\n      })\n    );\n  }\n}","export * from './reducers';","import * as fromRouter from '@ngrx/router-store';\nimport { Params, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\n\nexport interface RouterStateUrl {\n  url: string;\n  queryParams: Params;\n  params: Params;\n}\n\nexport interface CoreState {\n  routerReducer: fromRouter.RouterReducerState<RouterStateUrl>;\n}\n\nexport const reducers: ActionReducerMap<CoreState> = {\n  routerReducer: fromRouter.routerReducer,\n};\n\nexport const getRouterState = createFeatureSelector<fromRouter.RouterReducerState<RouterStateUrl>>('routerReducer');\n\nexport class CustorSerializer implements fromRouter.RouterStateSerializer<RouterStateUrl> {\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    const { url } = routerState;\n    const { queryParams } = routerState.root;\n\n    let state: ActivatedRouteSnapshot = routerState.root;\n    while(state.firstChild) {\n      state = state.firstChild;\n    }\n    const { params } = state;\n\n    return { url, params, queryParams };\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\nimport { User } from '../models/user';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) {}\n\n  static isAuth(): boolean {\n    return !!AuthService.getToken();\n  }\n\n  static getToken(): string {\n    return localStorage.getItem('token');\n  }\n\n  static setToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  login(user: User): Observable<{token: string}> {\n    return this.http.post<{token: string}>('http://localhost:3000/api/auth/login', user)\n      .pipe(tap(({ token }) => {\n        AuthService.setToken(token);\n      }));\n  }\n\n  register(user: User): Observable<User> {\n    return this.http.post<User>('http://localhost:3000/api/auth/register', user);\n  }\n\n  logout() {\n    localStorage.clear();\n    return of(true);\n  }\n}","import { Action } from '@ngrx/store';\nimport { User } from '../../models/user';\n\nexport enum ActionTypes {\n  LOGIN = '[Auth Component] LOGIN',\n  LOGIN_SUCCESS = '[Auth Component] LOGIN_SUCCESS',\n  LOGIN_FAIL = '[Auth Component] LOGIN_FAIL',\n  LOGOUT = '[Auth Component] LOGOUT',\n  LOGOUT_SUCCESS = '[Auth Component] LOGOUT_SUCCESS',\n  LOGOUT_FAIL = '[Auth Component] LOGOUT_FAIL',\n}\n\nexport class Login implements Action {\n  readonly type = ActionTypes.LOGIN;\n  constructor(public payload: User) {}\n}\n\nexport class LoginSuccess implements Action {\n  readonly type = ActionTypes.LOGIN_SUCCESS;\n\n  constructor(public payload: any) {}\n}\n\nexport class LoginFail implements Action {\n  readonly type = ActionTypes.LOGIN_FAIL;\n  constructor(public payload: string) {}\n}\n\nexport class LogOut implements Action {\n  readonly type = ActionTypes.LOGOUT;\n}\n\nexport class LogOutSuccess implements Action {\n  readonly type = ActionTypes.LOGOUT_SUCCESS;\n}\n\nexport class LogOutFail implements Action {\n  readonly type = ActionTypes.LOGOUT_FAIL;\n}\n\nexport type LoginAction = Login | LoginSuccess | LoginFail | LogOut | LogOutSuccess | LogOutFail;","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { CoreModule } from './app/@core/core.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(CoreModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}